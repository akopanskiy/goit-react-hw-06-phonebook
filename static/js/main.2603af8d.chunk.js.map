{"version":3,"sources":["component/ContactList/ContactList.module.css","component/Section/Section.module.css","component/Filter/Filter.module.css","redux/actions.js","component/ContactForm/ContactForm.js","redux/selectors.js","component/ContactList/ContactList.js","component/Filter/Filter.js","component/Section/Section.js","App.js","redux/reducer.js","redux/store.js","index.js","component/ContactForm/Form.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","ContactForm","useState","setName","setNumber","dispatch","useDispatch","nameId","numberId","handleChange","e","currentTarget","value","className","styles","form","onSubmit","preventDefault","contactsAction","htmlFor","flexRow","lfInput","type","placeholder","pattern","title","required","onChange","autoComplete","label","lfSubmit","getFilter","state","contacts","filter","getVisibleContacts","items","getItems","normalizedFilter","toLowerCase","item","includes","ContactList","useSelector","list","map","contactList","contactsNameNumber","buttonDelete","onClick","Filter","event","Section","children","App","itemsState","JSON","parse","localStorage","getItem","createReducer","actions","find","alert","_","contactsReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","persistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.2603af8d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__ipYh7\",\"contactList\":\"ContactList_contactList__1fTAu\",\"contactsNameNumber\":\"ContactList_contactsNameNumber__O4u0W\",\"buttonDelete\":\"ContactList_buttonDelete__LB-g1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Section_form__15llR\",\"name\":\"Section_name__14R58\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lfInput\":\"Filter_lfInput__2xR8L\",\"lf--input\":\"Filter_lf--input__p9fVO\"};","import { createAction } from '@reduxjs/toolkit';\r\nimport shortid from 'shortid';\r\n\r\nconst addContact = createAction('contacts/add', (name, number) => ({\r\n  payload: { id: shortid.generate(), name, number },\r\n}));\r\n\r\nconst deleteContact = createAction('contacts/delete');\r\n\r\nconst changeFilter = createAction('contacts/filter');\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { addContact, deleteContact, changeFilter };\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport contactsAction from '../../redux/actions';\r\n\r\nimport shortid from 'shortid';\r\nimport styles from './Form.module.css';\r\n\r\nfunction ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const nameId = shortid.generate();\r\n  const numberId = shortid.generate();\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    dispatch(contactsAction.addContact(name, number));\r\n\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className={styles.form} onSubmit={handleSubmit}>\r\n        <label htmlFor={nameId}>\r\n          <div className={styles.flexRow}>\r\n            <input\r\n              className={styles.lfInput}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              placeholder=\"Name\"\r\n              value={name}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              onChange={handleChange}\r\n              id={nameId}\r\n              autoComplete=\"off\"\r\n            />\r\n          </div>\r\n        </label>\r\n        <label className={styles.label} htmlFor={numberId}>\r\n          <div className={styles.flexRow}>\r\n            <input\r\n              className={styles.lfInput}\r\n              placeholder=\"Number\"\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              value={number}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              onChange={handleChange}\r\n              id={numberId}\r\n              autoComplete=\"off\"\r\n            />\r\n          </div>\r\n        </label>\r\n        <button className={styles.lfSubmit} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ContactForm;\r\n","export const getFilter = state => state.contacts.filter;\r\nexport const getItems = state => state.contacts.items;\r\nexport const getVisibleContacts = state => {\r\n  const filter = getFilter(state);\r\n  const items = getItems(state);\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return items.filter(item =>\r\n    item.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { getVisibleContacts } from '../../redux/selectors';\r\nimport contactsAction from '../../redux/actions';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = () => {\r\n  const contacts = useSelector(getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <ul className={styles.list}>\r\n      {contacts.map(({ name, id, number }) => (\r\n        <li className={styles.contactList} key={id}>\r\n          <span className={styles.contactsNameNumber}>\r\n            {name}: {number}\r\n          </span>\r\n          <button\r\n            className={styles.buttonDelete}\r\n            onClick={() => dispatch(contactsAction.deleteContact(id))}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport contactsAction from '../../redux/actions';\r\nimport { getFilter } from '../../redux/selectors';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = () => {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <label>\r\n      <input\r\n        className={styles.lfInput}\r\n        placeholder=\"Find contacts by name\"\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={event =>\r\n          dispatch(contactsAction.changeFilter(event.currentTarget.value))\r\n        }\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <div className={styles.form}>\r\n      <h1 className={styles.name}>{title}</h1>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","import ContactForm from './component/ContactForm';\r\nimport ContactList from './component/ContactList';\r\nimport Filter from './component/Filter';\r\nimport Section from './component/Section';\r\n\r\nexport default function App() {\r\n  return (\r\n    <>\r\n      <Section title={'Phonebook'}>\r\n        <ContactForm />\r\n      </Section>\r\n      <Section title={'Contacts'}>\r\n        <Filter />\r\n        <ContactList />\r\n      </Section>\r\n    </>\r\n  );\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './actions';\r\n\r\nconst itemsState = JSON.parse(localStorage.getItem('contacts')) ?? [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\nconst items = createReducer(itemsState, {\r\n  [actions.addContact]: (state, { payload }) =>\r\n    state.find(({ name }) => name === payload.name)\r\n      ? alert(`${payload.name} вже існує в телефонній книзі.`)\r\n      : [...state, payload],\r\n  [actions.deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst contactsReducer = combineReducers({ items, filter });\r\n\r\nexport default contactsReducer;\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport contactsReducer from './reducer';\r\nimport logger from 'redux-logger';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst persistConfig = {\r\n  key: 'contacts',\r\n  storage,\r\n  blacklist: ['filter'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: { contacts: persistReducer(persistConfig, contactsReducer) },\r\n  middleware: middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { store, persistor };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flexRow\":\"Form_flexRow__A9xPO\",\"lfInput\":\"Form_lfInput__2zbUd\",\"lf--input\":\"Form_lf--input__2td1X\",\"lfSubmit\":\"Form_lfSubmit__1hF3c\"};"],"sourceRoot":""}