{"version":3,"sources":["component/Section/Section.module.css","component/Filter/Filter.module.css","component/ContactForm/Form.module.css","redux/types.js","redux/actions.js","component/ContactForm/ContactForm.js","component/ContactList/ContactList.js","component/Filter/Filter.js","component/Section/Section.js","App.js","redux/reducer.js","redux/store.js","index.js","component/ContactList/ContactList.module.css"],"names":["module","exports","name","number","type","types","payload","id","shortid","generate","contactId","value","connect","dispatch","onSubmit","contactsAction","useState","setName","setNumber","nameId","numberId","handleChange","e","currentTarget","className","styles","form","preventDefault","htmlFor","flexRow","lfInput","placeholder","pattern","title","required","onChange","label","lfSubmit","state","contacts","items","normalizedFilter","filter","toLowerCase","item","includes","onDeleteContact","list","map","contactList","contactsNameNumber","buttonDelete","onClick","event","Section","children","useEffect","localStorage","setItem","JSON","stringify","itemsState","parse","getItem","contactsReducer","combineReducers","rootReducer","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a0e0e9c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Section_form__15llR\",\"name\":\"Section_name__14R58\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lfInput\":\"Filter_lfInput__2xR8L\",\"lf--input\":\"Filter_lf--input__p9fVO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flexRow\":\"Form_flexRow__A9xPO\",\"lfInput\":\"Form_lfInput__2zbUd\",\"lf--input\":\"Form_lf--input__2td1X\",\"lfSubmit\":\"Form_lfSubmit__1hF3c\"};","// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  ADD: 'phoneBook/add',\r\n  DELETE: 'phoneBook/delete',\r\n  FILTER: 'phoneBook/filter',\r\n};\r\n","import types from './types';\r\nimport shortid from 'shortid';\r\n\r\nconst addContact = (name, number) => ({\r\n  type: types.ADD,\r\n  payload: { id: shortid.generate(), name, number },\r\n});\r\n\r\nconst deleteContact = contactId => ({\r\n  type: types.DELETE,\r\n  payload: contactId,\r\n});\r\n\r\nconst changeFilter = value => ({\r\n  type: types.FILTER,\r\n  payload: value,\r\n});\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { addContact, deleteContact, changeFilter };\r\n","import { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport contactsAction from '../../redux/actions';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport shortid from 'shortid';\r\nimport styles from './Form.module.css';\r\n\r\nfunction ContactForm({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const nameId = shortid.generate();\r\n  const numberId = shortid.generate();\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    onSubmit(name, number);\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className={styles.form} onSubmit={handleSubmit}>\r\n        <label htmlFor={nameId}>\r\n          <div className={styles.flexRow}>\r\n            <input\r\n              className={styles.lfInput}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              placeholder=\"Name\"\r\n              value={name}\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              onChange={handleChange}\r\n              id={nameId}\r\n            />\r\n          </div>\r\n        </label>\r\n        <label className={styles.label} htmlFor={numberId}>\r\n          <div className={styles.flexRow}>\r\n            <input\r\n              className={styles.lfInput}\r\n              placeholder=\"Number\"\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              value={number}\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n              onChange={handleChange}\r\n              id={numberId}\r\n            />\r\n          </div>\r\n        </label>\r\n        <button className={styles.lfSubmit} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: (name, number) => dispatch(contactsAction.addContact(name, number)),\r\n});\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport contactsAction from '../../redux/actions';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul className={styles.list}>\r\n      {contacts.map(({ name, id, number }) => (\r\n        <li className={styles.contactList} key={id}>\r\n          <span className={styles.contactsNameNumber}>\r\n            {name}: {number}\r\n          </span>\r\n          <button\r\n            className={styles.buttonDelete}\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nContactList.propTypes = {\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\n// const getVisibleContacts = () => {\r\n//   const normalizedFilter = filter.toLowerCase();\r\n//   return contacts.filter(contact =>\r\n//     contact.name.toLowerCase().includes(normalizedFilter),\r\n//   );\r\n// };\r\n\r\nconst mapStateToProps = state => {\r\n  const { items, filter } = state.contacts;\r\n  const normalizedFilter = filter.toLowerCase();\r\n  const visibleContacts = items.filter(item =>\r\n    item.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n  return {\r\n    contacts: visibleContacts,\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDeleteContact: id => dispatch(contactsAction.deleteContact(id)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport contactsAction from '../../redux/actions';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label>\r\n      <input\r\n        className={styles.lfInput}\r\n        placeholder=\"Find contacts by name\"\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = state => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: event =>\r\n    dispatch(contactsAction.changeFilter(event.currentTarget.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <div className={styles.form}>\r\n      <h1 className={styles.name}>{title}</h1>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","import { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ContactForm from './component/ContactForm';\r\nimport ContactList from './component/ContactList';\r\nimport Filter from './component/Filter';\r\nimport Section from './component/Section';\r\n\r\nfunction App({ items }) {\r\n  useEffect(() => {\r\n    localStorage.setItem('contacts', JSON.stringify(items));\r\n  }, [items]);\r\n\r\n  return (\r\n    <>\r\n      <Section title={'Phonebook'}>\r\n        <ContactForm />\r\n      </Section>\r\n      <Section title={'Contacts'}>\r\n        <Filter />\r\n        <ContactList />\r\n      </Section>\r\n    </>\r\n  );\r\n}\r\nconst mapStateToProps = state => ({\r\n  items: state.contacts.items,\r\n});\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import { combineReducers } from 'redux';\r\nimport types from './types';\r\n\r\nconst itemsState = JSON.parse(localStorage.getItem('contacts')) ?? [\r\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n];\r\n\r\nconst items = (state = itemsState, { type, payload }) => {\r\n  switch (type) {\r\n    case types.ADD:\r\n      return [...state, payload];\r\n\r\n    case types.DELETE:\r\n      return state.filter(({ id }) => id !== payload);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst filter = (state = '', { type, payload }) => {\r\n  switch (type) {\r\n    case types.FILTER:\r\n      return payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nconst contactsReducer = combineReducers({ items, filter });\r\n\r\nexport default contactsReducer;\r\n","import { createStore, combineReducers } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport contactsReducer from './reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n});\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__ipYh7\",\"contactList\":\"ContactList_contactList__1fTAu\",\"contactsNameNumber\":\"ContactList_contactsNameNumber__O4u0W\",\"buttonDelete\":\"ContactList_buttonDelete__LB-g1\"};"],"sourceRoot":""}